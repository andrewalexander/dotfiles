# ==================== Settings ====================

set -g default-terminal "xterm-256color"

# Turn the mouse on
set -g mouse on

# Time in milliseconds to allow for multiple commands without pressing the
# prefix key again
set -g repeat-time 1000

# Time in milliseconds for which tmux waits after an escape
set -g escape-time 0

# Increase history limit
set -g history-limit 50000

# Use vim key bindings
set -g mode-keys vi
set -g status-keys vi

# Start window numbering at 1
set -g base-index 1
setw -g pane-base-index 1

# Resize windows when terminal size changes
setw -g aggressive-resize on

# Rename window to reflect current program
set -g -w automatic-rename on

# Renumber windows when one is closed
set -g renumber-windows on

# No bells at all
set -g bell-action none
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off

# Reload configuration
bind r source-file ~/.tmux.conf \; display-message "tmux config reloaded"


# ==================== Display ====================

set -g message-style fg=colour232,bg=colour166,bold
set -g message-command-style fg=blue,bg=black,bold
set -g mode-style fg=colour196,bg=colour238,bold
#set -g pane-active-border-style fg=colour51,bg=colour236
#set -g pane-border-style fg=colour238,bg=colour235
set -g status-style fg=colour137,bg=colour234,dim
set -g window-status-style fg=colour138,bg=colour235,none
set -g window-status-bell-style fg=colour255,bg=colour1,bold
set -g window-status-current-style fg=colour81,bg=colour238,bold

# Pane border
set-option -g pane-border-style bg=default,fg=brightblack
set-option -g pane-active-border-style bg=default,fg=brightblack

set -g status-interval 2
set -g status-justify centre
set -g status-position bottom
set -g status-left '#[fg=colour233,bg=colour245,bold]#(hostname)'
set -g status-right '#[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M:%S '
setw -g clock-mode-colour colour135
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '
#set -g status-fg white
set -g status-bg default


# ==================== Mappings ====================

# remap prefix from 'C-b' to 'C-a'
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind -n 'C-\' if-shell "$is_vim" "send-keys 'C-\\'" "select-pane -l"
bind -T copy-mode-vi C-h select-pane -L
bind -T copy-mode-vi C-j select-pane -D
bind -T copy-mode-vi C-k select-pane -U
bind -T copy-mode-vi C-l select-pane -R
bind -T copy-mode-vi 'C-\' select-pane -l

# Resize panes
bind -r C-h resize-pane -L 5
bind -r C-j resize-pane -D 5
bind -r C-k resize-pane -U 5
bind -r C-l resize-pane -R 5

# Split pane vertically
bind | split-window -h -c "#{pane_current_path}"

# Split pane horizontally
bind - split-window -v -c "#{pane_current_path}"

# Swap focused pane with the next one
bind > swap-pane -D

# Swap focused pane with the previous one
bind < swap-pane -U

# Move the focused pane to the previous window
bind j join-pane -ht !

# Move the focused pane to a new window
bind N break-pane

# Send keys to all panes at the same time
bind b set-window-option synchronize-panes

# Kill the focused pane
bind K kill-pane -a

bind x set -g status off

bind-key -r -T prefix t run-shell 'tmux choose-tree -Zwf"##{==:##{session_name},#{session_name}}"'


# ==================== Copy/Paste ====================

# Enter copy mode
bind -n M-p copy-mode

# Select
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi V send-keys -X select-line
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle

# Copy
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"

# Cancel
bind -T copy-mode-vi Escape send-keys -X cancel

# Paste
#bind p paste-buffer -s ""
#bind P choose-buffer "paste-buffer -b '%%' -s ''"

# Make mouse drag end behavior configurable
unbind -T copy-mode-vi MouseDragEnd1Pane
bind -T copy-mode-vi WheelUpPane select-pane \; send-keys -t '{mouse}' -X clear-selection \; send-keys -t '{mouse}' -X -N 5 scroll-up
bind -T copy-mode-vi WheelDownPane select-pane \; send-keys -t '{mouse}' -X clear-selection \; send-keys -t '{mouse}' -X -N 5 scroll-down
